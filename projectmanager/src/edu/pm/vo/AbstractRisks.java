/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Mon Nov 27 23:59:04 CST 2006 by MyEclipse Hibernate Tool.
 */
package edu.pm.vo;

import java.io.Serializable;

/**
 * A class that represents a row in the risks table. 
 * You can customize the behavior of this class by editing the class, {@link Risks()}.
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized * by MyEclipse Hibernate tool integration.
 */
public abstract class AbstractRisks 
    implements Serializable
{
    /** The cached hash code value for this instance.  Settting to 0 triggers re-calculation. */
    private int hashValue = 0;

    /** The composite primary key value. */
    private java.lang.Long id;

    /** The value of the projects association. */
    private Long projectId;

    /** The value of the simple riskDescription property. */
    private java.lang.String riskDescription;

    /** The value of the simple riskLevel property. */
    private java.lang.String riskLevel;

    /** The value of the simple probability property. */
    private java.lang.String probability;

    /** The value of the simple submitById property. */
    private java.lang.Long submitById;

    /** The value of the simple submitDate property. */
    private java.util.Date submitDate;

    /** The value of the simple influence property. */
    private java.lang.String influence;

    /** The value of the simple keepAwayMeasure property. */
    private java.lang.String keepAwayMeasure;

    /** The value of the simple status property. */
    private java.lang.String status;

    /**
     * Simple constructor of AbstractRisks instances.
     */
    public AbstractRisks()
    {
    }

    /**
     * Constructor of AbstractRisks instances given a simple primary key.
     * @param id
     */
    public AbstractRisks(java.lang.Long id)
    {
        this.setId(id);
    }

    /**
     * Return the simple primary key value that identifies this object.
     * @return java.lang.Long
     */
    public java.lang.Long getId()
    {
        return id;
    }

    /**
     * Set the simple primary key value that identifies this object.
     * @param id
     */
    public void setId(java.lang.Long id)
    {
        this.hashValue = 0;
        this.id = id;
    }

   

    public Long getProjectId() {
		return projectId;
	}

	public void setProjectId(Long projectId) {
		this.projectId = projectId;
	}

	/**
     * Return the value of the risk_description column.
     * @return java.lang.String
     */
    public java.lang.String getRiskDescription()
    {
        return this.riskDescription;
    }

    /**
     * Set the value of the risk_description column.
     * @param riskDescription
     */
    public void setRiskDescription(java.lang.String riskDescription)
    {
        this.riskDescription = riskDescription;
    }

    /**
     * Return the value of the risk_level column.
     * @return java.lang.String
     */
    public java.lang.String getRiskLevel()
    {
        return this.riskLevel;
    }

    /**
     * Set the value of the risk_level column.
     * @param riskLevel
     */
    public void setRiskLevel(java.lang.String riskLevel)
    {
        this.riskLevel = riskLevel;
    }

    /**
     * Return the value of the probability column.
     * @return java.lang.String
     */
    public java.lang.String getProbability()
    {
        return this.probability;
    }

    /**
     * Set the value of the probability column.
     * @param probability
     */
    public void setProbability(java.lang.String probability)
    {
        this.probability = probability;
    }

    /**
     * Return the value of the submit_by_id column.
     * @return java.lang.Long
     */
    public java.lang.Long getSubmitById()
    {
        return this.submitById;
    }

    /**
     * Set the value of the submit_by_id column.
     * @param submitById
     */
    public void setSubmitById(java.lang.Long submitById)
    {
        this.submitById = submitById;
    }

    /**
     * Return the value of the submit_date column.
     * @return java.util.Date
     */
    public java.util.Date getSubmitDate()
    {
        return this.submitDate;
    }

    /**
     * Set the value of the submit_date column.
     * @param submitDate
     */
    public void setSubmitDate(java.util.Date submitDate)
    {
        this.submitDate = submitDate;
    }

    /**
     * Return the value of the influence column.
     * @return java.lang.String
     */
    public java.lang.String getInfluence()
    {
        return this.influence;
    }

    /**
     * Set the value of the influence column.
     * @param influence
     */
    public void setInfluence(java.lang.String influence)
    {
        this.influence = influence;
    }

    /**
     * Return the value of the keep_away_measure column.
     * @return java.lang.String
     */
    public java.lang.String getKeepAwayMeasure()
    {
        return this.keepAwayMeasure;
    }

    /**
     * Set the value of the keep_away_measure column.
     * @param keepAwayMeasure
     */
    public void setKeepAwayMeasure(java.lang.String keepAwayMeasure)
    {
        this.keepAwayMeasure = keepAwayMeasure;
    }

    /**
     * Return the value of the status column.
     * @return java.lang.String
     */
    public java.lang.String getStatus()
    {
        return this.status;
    }

    /**
     * Set the value of the status column.
     * @param status
     */
    public void setStatus(java.lang.String status)
    {
        this.status = status;
    }

    /**
     * Implementation of the equals comparison on the basis of equality of the primary key values.
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs)
    {
        if (rhs == null)
            return false;
        if (! (rhs instanceof Risks))
            return false;
        Risks that = (Risks) rhs;
        if (this.getId() != null && that.getId() != null)
        {
            if (! this.getId().equals(that.getId()))
            {
                return false;
            }
        }
        return true;
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern with
     * the exception of array properties (these are very unlikely primary key types).
     * @return int
     */
    public int hashCode()
    {
        if (this.hashValue == 0)
        {
            int result = 17;
            int idValue = this.getId() == null ? 0 : this.getId().hashCode();
            result = result * 37 + idValue;
            this.hashValue = result;
        }
        return this.hashValue;
    }
}
