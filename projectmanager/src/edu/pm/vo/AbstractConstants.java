/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Mon Nov 27 23:57:41 CST 2006 by MyEclipse Hibernate Tool.
 */
package edu.pm.vo;

import java.io.Serializable;

/**
 * A class that represents a row in the constants table. 
 * You can customize the behavior of this class by editing the class, {@link Constants()}.
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized * by MyEclipse Hibernate tool integration.
 */
public abstract class AbstractConstants 
    implements Serializable
{
    /** The cached hash code value for this instance.  Settting to 0 triggers re-calculation. */
    private int hashValue = 0;

    /** The composite primary key value. */
    private java.lang.Long id;

    /** The value of the simple constantType property. */
    private java.lang.String constantType;

    /** The value of the simple constantLabel property. */
    private java.lang.String constantLabel;

    /** The value of the simple constantValue property. */
    private java.lang.String constantValue;

    /** The value of the simple constantOrder property. */
    private java.lang.Integer constantOrder;

    /** The value of the simple property1 property. */
    private java.lang.String property1;

    /** The value of the simple property2 property. */
    private java.lang.String property2;

    /** The value of the simple property3 property. */
    private java.lang.String property3;

    /**
     * Simple constructor of AbstractConstants instances.
     */
    public AbstractConstants()
    {
    }

    /**
     * Constructor of AbstractConstants instances given a simple primary key.
     * @param id
     */
    public AbstractConstants(java.lang.Long id)
    {
        this.setId(id);
    }

    /**
     * Return the simple primary key value that identifies this object.
     * @return java.lang.Long
     */
    public java.lang.Long getId()
    {
        return id;
    }

    /**
     * Set the simple primary key value that identifies this object.
     * @param id
     */
    public void setId(java.lang.Long id)
    {
        this.hashValue = 0;
        this.id = id;
    }

    /**
     * Return the value of the constant_type column.
     * @return java.lang.String
     */
    public java.lang.String getConstantType()
    {
        return this.constantType;
    }

    /**
     * Set the value of the constant_type column.
     * @param constantType
     */
    public void setConstantType(java.lang.String constantType)
    {
        this.constantType = constantType;
    }

    /**
     * Return the value of the constant_label column.
     * @return java.lang.String
     */
    public java.lang.String getConstantLabel()
    {
        return this.constantLabel;
    }

    /**
     * Set the value of the constant_label column.
     * @param constantLabel
     */
    public void setConstantLabel(java.lang.String constantLabel)
    {
        this.constantLabel = constantLabel;
    }

    /**
     * Return the value of the constant_value column.
     * @return java.lang.String
     */
    public java.lang.String getConstantValue()
    {
        return this.constantValue;
    }

    /**
     * Set the value of the constant_value column.
     * @param constantValue
     */
    public void setConstantValue(java.lang.String constantValue)
    {
        this.constantValue = constantValue;
    }

    /**
     * Return the value of the constant_order column.
     * @return java.lang.Integer
     */
    public java.lang.Integer getConstantOrder()
    {
        return this.constantOrder;
    }

    /**
     * Set the value of the constant_order column.
     * @param constantOrder
     */
    public void setConstantOrder(java.lang.Integer constantOrder)
    {
        this.constantOrder = constantOrder;
    }

    /**
     * Return the value of the property1 column.
     * @return java.lang.String
     */
    public java.lang.String getProperty1()
    {
        return this.property1;
    }

    /**
     * Set the value of the property1 column.
     * @param property1
     */
    public void setProperty1(java.lang.String property1)
    {
        this.property1 = property1;
    }

    /**
     * Return the value of the property2 column.
     * @return java.lang.String
     */
    public java.lang.String getProperty2()
    {
        return this.property2;
    }

    /**
     * Set the value of the property2 column.
     * @param property2
     */
    public void setProperty2(java.lang.String property2)
    {
        this.property2 = property2;
    }

    /**
     * Return the value of the property3 column.
     * @return java.lang.String
     */
    public java.lang.String getProperty3()
    {
        return this.property3;
    }

    /**
     * Set the value of the property3 column.
     * @param property3
     */
    public void setProperty3(java.lang.String property3)
    {
        this.property3 = property3;
    }

    /**
     * Implementation of the equals comparison on the basis of equality of the primary key values.
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs)
    {
        if (rhs == null)
            return false;
        if (! (rhs instanceof Constants))
            return false;
        Constants that = (Constants) rhs;
        if (this.getId() != null && that.getId() != null)
        {
            if (! this.getId().equals(that.getId()))
            {
                return false;
            }
        }
        return true;
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern with
     * the exception of array properties (these are very unlikely primary key types).
     * @return int
     */
    public int hashCode()
    {
        if (this.hashValue == 0)
        {
            int result = 17;
            int idValue = this.getId() == null ? 0 : this.getId().hashCode();
            result = result * 37 + idValue;
            this.hashValue = result;
        }
        return this.hashValue;
    }
}
