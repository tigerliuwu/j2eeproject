/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Mon Nov 27 23:59:50 CST 2006 by MyEclipse Hibernate Tool.
 */
package edu.pm.vo;

import java.io.Serializable;

/**
 * A class that represents a row in the weeks table. 
 * You can customize the behavior of this class by editing the class, {@link Weeks()}.
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized * by MyEclipse Hibernate tool integration.
 */
public abstract class AbstractWeeks 
    implements Serializable
{
    /** The cached hash code value for this instance.  Settting to 0 triggers re-calculation. */
    private int hashValue = 0;

    /** The composite primary key value. */
    private java.lang.Long id;

    /** The value of the projects association. */
    private Long projectId;

    /** The value of the simple startDate property. */
    private java.util.Date startDate;

    /** The value of the simple endDate property. */
    private java.util.Date endDate;

    /** The value of the simple workloadPerDay property. */
    private java.lang.Integer workloadPerDay;

    /**
     * Simple constructor of AbstractWeeks instances.
     */
    public AbstractWeeks()
    {
    }

    /**
     * Constructor of AbstractWeeks instances given a simple primary key.
     * @param id
     */
    public AbstractWeeks(java.lang.Long id)
    {
        this.setId(id);
    }

    /**
     * Return the simple primary key value that identifies this object.
     * @return java.lang.Long
     */
    public java.lang.Long getId()
    {
        return id;
    }

    /**
     * Set the simple primary key value that identifies this object.
     * @param id
     */
    public void setId(java.lang.Long id)
    {
        this.hashValue = 0;
        this.id = id;
    }

    
    public Long getProjectId() {
		return projectId;
	}

	public void setProjectId(Long projectId) {
		this.projectId = projectId;
	}

	/**
     * Return the value of the start_date column.
     * @return java.util.Date
     */
    public java.util.Date getStartDate()
    {
        return this.startDate;
    }

    /**
     * Set the value of the start_date column.
     * @param startDate
     */
    public void setStartDate(java.util.Date startDate)
    {
        this.startDate = startDate;
    }

    /**
     * Return the value of the end_date column.
     * @return java.util.Date
     */
    public java.util.Date getEndDate()
    {
        return this.endDate;
    }

    /**
     * Set the value of the end_date column.
     * @param endDate
     */
    public void setEndDate(java.util.Date endDate)
    {
        this.endDate = endDate;
    }

    /**
     * Return the value of the workload_per_day column.
     * @return java.lang.Integer
     */
    public java.lang.Integer getWorkloadPerDay()
    {
        return this.workloadPerDay;
    }

    /**
     * Set the value of the workload_per_day column.
     * @param workloadPerDay
     */
    public void setWorkloadPerDay(java.lang.Integer workloadPerDay)
    {
        this.workloadPerDay = workloadPerDay;
    }

    /**
     * Implementation of the equals comparison on the basis of equality of the primary key values.
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs)
    {
        if (rhs == null)
            return false;
        if (! (rhs instanceof Weeks))
            return false;
        Weeks that = (Weeks) rhs;
        if (this.getId() != null && that.getId() != null)
        {
            if (! this.getId().equals(that.getId()))
            {
                return false;
            }
        }
        return true;
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern with
     * the exception of array properties (these are very unlikely primary key types).
     * @return int
     */
    public int hashCode()
    {
        if (this.hashValue == 0)
        {
            int result = 17;
            int idValue = this.getId() == null ? 0 : this.getId().hashCode();
            result = result * 37 + idValue;
            this.hashValue = result;
        }
        return this.hashValue;
    }
}
